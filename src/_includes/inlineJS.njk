<script>
document.documentElement.className = document
  .documentElement
  .className
  .replace(/\bno-js\b/g, '') + 'has-js ';

/**
 * register service worker.
 */
if ('serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator
      .serviceWorker
      .register('/sw.js');
  });
  navigator
    .serviceWorker
    .addEventListener('message', async (event) => {
      // Optional: ensure the message came from workbox-broadcast-update
      if (event.data.meta === 'workbox-broadcast-update') {
        const {cacheName, updatedUrl} = event.data.payload;
        console.groupCollapsed(`[Page] Updated content in "${cacheName}": ${updatedUrl}`);
        const cache = await caches.open(cacheName);
        const updatedResponse = await cache.match(updatedUrl);
        if (updatedResponse) {
          const updatedText = await updatedResponse.text();
          console.log(updatedText);
        }
        console.groupEnd();
      }
    });
}

/**
 * Handle Bulma.css hamburger menu on mobile
 */
document.addEventListener('DOMContentLoaded', () => {

  // Get all "navbar-burger" elements
  const $navbarBurgers = Array.prototype.slice.call(document.querySelectorAll('.navbar-burger'), 0);

  // Check if there are any navbar burgers
  if ($navbarBurgers.length > 0) {

    // Add a click event on each of them
    $navbarBurgers.forEach( el => {
      el.addEventListener('click', () => {

        // Get the target from the "data-target" attribute
        const target = el.dataset.target;
        const $target = document.getElementById(target);

        // Toggle the "is-active" class on both the "navbar-burger" and the "navbar-menu"
        el.classList.toggle('is-active');
        $target.classList.toggle('is-active');

      });
    });
  }
});
</script>

{% if process.env.ELEVENTY_ENV === "production" and process.env.GOOGLE_ANALYTICS_TRACKING_ID  %}
  <!-- Global site tag (gtag.js) - Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id={{ process.env.GOOGLE_ANALYTICS_TRACKING_ID }}"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());
    gtag('config', '{{ process.env.GOOGLE_ANALYTICS_TRACKING_ID }}');
  </script>
{% endif %}



